close all;      % 关闭所有图形窗口
clear all;      % 清楚所有变量
clc;            % 清空命令窗口

% 定义初始条件和参数
x0 = 0;         % 开始时间
x1 = 240000;    % 结束时间
h = 60;         % 时间步长（秒）
y0 = [5767802.3,-2818455,5876662.9,-4119.834,-572.527,-1294.169]; % 初始状态向量
a = 1.05859e-7; % 小行星真近点角速率
Va = 9e-9;      % 径向速度
Ra = 2.27e8;    % 火星轨道半径
u = 1.327e11;   % 太阳的万有引力常数
u1 = 4.285e4;   % 火星的万有引力常数

% 定义微分方程组
dy=@(y)[y(4),y(5),y(6),-u1*y(1)/(sqrt(y(1)^2+y(2)^2+y(3)^2)^3)+2*a*(y(5)-y(2)*Va/Ra)+y(1)*a^2+u/Ra^2-u*(Ra+y(1))/(sqrt((Ra+y(1))^2+y(2)^2+y(3)^2))^3,-u1*y(2)/(sqrt(y(1)^2+y(2)^2+y(3)^2)^3)-2*a*(y(4)-y(1)*Va/Ra)+y(2)*a^2-u*y(2)/(sqrt((Ra+y(1))^2+y(2)^2+y(3)^2))^3,-u1*y(3)/(sqrt(y(1)^2+y(2)^2+y(3)^2)^3)-u*y(3)/(sqrt((Ra+y(1))^2+y(2)^2+y(3)^2))^3];

% 定义时间范围
x = x0:h:x1;

% 初始化结果矩阵
y = zeros(length(x), length(y0));
y = zeros(length(x), length(y0));
y(1,:) = y0;

% 使用4阶龙格-库塔方法求解微分方程组
for ni=2:length(x)
    k1=dy(y(ni-1,:));
    k2=dy(y(ni-1,:)+h/2*k1);
    k3=dy(y(ni-1,:)+h/2*k2);
    k4=dy(y(ni-1,:)+h*k3);
    y(ni,:)=y(ni-1,:)+h*k1;
      
end

% 计算每个时间步长的距离原点的距离
d = sqrt((y(:,1)).^2+(y(:,2)).^2+(y(:,3)).^2);

% 计算xy平面上的速度分量
for i = 1:450
    u(i) = 100*y(i,1)/d(i);
    v(i) = 100*y(i,2)/d(i);
end

% 画出三维轨迹
figure
plot3(y(:,1), y(:,2), y(:,3), 'b', 'LineWidth', 4);
grid on;
xlabel('x[km]','FontSize',10);
ylabel('y[km]','FontSize',10);
zlabel('z[km]','FontSize',10);
title('火星探测器运动轨迹')


% 将火星运行轨迹数据保存为.mat文件
x1=y(:,1);
y1=y(:,2);
z1=y(:,3);
save('mars_trajectory.mat', 'x1', 'y1', 'z1', 'x')

